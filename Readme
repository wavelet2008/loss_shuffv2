Python3.8  修改空格对齐问题


8.31： fc/Shufflenet-v2-Pytorch

1. model.load_state_dict(torch.load(args.evaluate))
    input = torch.randn((1,3,  224,224))

    torch.onnx.export(model,input,"loss.onnx",opset_version=10)    // 版本修改

2. remonnx.py 
 导出模型 onnx.utils.extract_model



3.rk 转码
8.180
  
data/opt/external/rknn-toolkit-v1.7.1/examples/onnx/resnet50v2

4onnx2rknn.py

 rknn.config(batch_size=1, mean_values=[[123.67, 116.28, 103.53]], std_values=[[58.4, 57.12, 57.37]], reorder_channel='0 1 2', target_platform=[platform],
                force_builtin_perm=add_perm,quantized_dtype='asymmetric_affine-u8', optimization_level=3, output_optimize=1)

4
8.108
C:\Users\ffipc\AppData\Local\Programs\Python\Python3 ecompile_model.py  yolovopt.rknn  syolovopt.rknn

Shufflenet-v2-Pytorch 
Introduction

This is a Pytorch implementation of faceplusplus's ShuffleNet-v2. For details, please read the following papers: 
	ShuffleNet V2: Practical Guidelines for Efficient CNN Architecture Design

Pretrained Models on ImageNet

We provide pretrained ShuffleNet-v2 models on ImageNet,which achieve slightly better accuracy rates than the original ones reported in the paper.

The top-1/5 accuracy rates by using single center crop (crop size: 224x224, image size: 256xN): 
Network 		Top-1 	Top-5	Top-1(reported in the paper) 
ShuffleNet-v2-x0.5 	60.646 	81.696	60.300
ShuffleNet-v2-x1 	69.402 	88.374	69.400


Evaluate Models 
python eval.py -a shufflenetv2 --width_mult=0.5 --evaluate=./shufflenetv2_x0.5_60.646_81.696.pth.tar ./ILSVRC2012/
python eval.py -a shufflenetv2 --width_mult=1.0 --evaluate=./shufflenetv2_x1_69.390_88.412.pth.tar ./ILSVRC2012/

Version:
Python2.7
torch0.3.1
torchvision0.2.1

Dataset prepare Refer to https://github.com/facebook/fb.resnet.torch/blob/master/INSTALL.md#download-the-imagenet-dataset

